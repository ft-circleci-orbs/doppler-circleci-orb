version: 2.1

orbs:
  # Your orb will be automatically injected here during the pipeline.
  # Reference your orb's jobs and commands below as they will exist when built.
  orb-tools: circleci/orb-tools@12.0
  # The orb definition is intentionally not included here. It will be injected into the pipeline.
  doppler-circleci: {}

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  # Create jobs to test the commands of your orbs.
  # You may want to add additional validation steps to ensure the commands are working as expected.
  command-test-apt:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      # Run your orb's commands to validate them.
      - doppler-circleci/install
      - doppler-circleci/load_secrets
      - run:
          name: Assert environment variables set up as expected
          command: |
            if [ -z $SUPER_SECRET_PASSWORD ]
            then
              echo "Test failed: SUPER_SECRET_PASSWORD has not been set."
              exit 1
            fi
            if [ $DOPPLER_PROJECT ]
            then
              echo "Test failed: DOPPLER_PROJECT has been set."
              exit 1
            fi
            if [ $DOPPLER_CONFIG]
            then
              echo "Test failed: DOPPLER_CONFIG has been set."
              exit 1
            fi
            if [ $DOPPLER_ENVIRONMENT]
            then
              echo "Test failed: DOPPLER_ENVIRONMENT has been set."
              exit 1
            fi
            echo "All tests passed."

  command-test-apk:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      # Run your orb's commands to validate them.
      - doppler-circleci/install
      - doppler-circleci/load_secrets
      - run:
          name: Print out doppler secret as an environment variable
          command: source $BASH_ENV && echo -e "${SUPER_SECRET_PASSWORD}"
workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - command-test-apt:
          context: circleci-orb-publishing
          filters: *filters
      - command-test-apk:
          context: circleci-orb-publishing
          filters: *filters
      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: ft-circleci-orbs/doppler-circleci
          vcs_type: << pipeline.project.type >>
          pub_type: production
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - command-test-apt
            - command-test-apk
          context: circleci-orb-publishing
          filters: *release-filters
